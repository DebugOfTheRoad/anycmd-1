
namespace Anycmd.Tests
{
    using Host;
    using Host.AC;
    using Host.AC.Identity;
    using Host.AC.Infra;
    using Logging;
    using Model;
    using Moq;
    using Rdb;
    using Repositories;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Reflection;

    public static class TestHelper
    {
        public static AppHost GetAppHost()
        {
            var host = new MoqAppHost();
            host.RegisterRepository(typeof(AppHost).Assembly);
            host.AddService(typeof(ILoggingService), new log4netLoggingService(host));
            host.AddService(typeof(IUserSessionStorage), new SimpleUserSessionStorage());
            Guid accountID = Guid.NewGuid();
            host.GetRequiredService<IRepository<Account>>().Add(new Account
            {
                Id = accountID,
                LoginName = "LoginName1",
                Password = "111111",
                AuditState = string.Empty,
                BackColor = string.Empty,
                AllowEndTime = null,
                AllowStartTime = null,
                AnswerQuestion = string.Empty,
                Description = string.Empty,
                FirstLoginOn = null,
                DeletionStateCode = 0,
                IPAddress = string.Empty,
                Lang = string.Empty,
                IsEnabled = 1,
                LastPasswordChangeOn = null,
                LockEndTime = null,
                LockStartTime = null,
                LoginCount = null,
                MacAddress = string.Empty,
                OpenID = string.Empty,
                PreviousLoginOn = null,
                NumberID = 10,
                Question = string.Empty,
                Theme = string.Empty,
                Wallpaper = string.Empty,
                SecurityLevel = 0,
                Code = "user1",
                CommunicationPassword = string.Empty,
                Email = string.Empty,
                Mobile = string.Empty,
                PublicKey = string.Empty,
                QQ = string.Empty,
                Name = "user1",
                QuickQuery = string.Empty,
                QuickQuery1 = string.Empty,
                QuickQuery2 = string.Empty,
                SignedPassword = string.Empty,
                Telephone = string.Empty,
                OrganizationCode = string.Empty
            });
            host.GetRequiredService<IRepository<Account>>().Context.Commit();
            Guid appSystemID = Guid.NewGuid();
            host.GetRequiredService<IRepository<AppSystem>>().Add(new AppSystem
            {
                Id = appSystemID,
                Name = "test",
                Code = "test",
                PrincipalID = host.GetRequiredService<IRepository<Account>>().FindAll().First().Id
            });
            host.GetRequiredService<IRepository<AppSystem>>().Context.Commit();
            host.GetRequiredService<IRepository<ResourceType>>().Add(new ResourceType
                {
                    AllowDelete = 0,
                    AllowEdit = 0,
                    Code = "Resource1",
                    Id = Guid.NewGuid(),
                    Icon = string.Empty,
                    Description = string.Empty,
                    Name = "测试1",
                    SortCode = 10,
                    AppSystemID = appSystemID
                });
            host.GetRequiredService<IRepository<ResourceType>>().Context.Commit();
            host.RemoveService(typeof(IAppHostBootstrap));
            var moAppHostBootstrap = new Mock<IAppHostBootstrap>();
            moAppHostBootstrap.Setup<IList<RDatabase>>(a => a.GetAllRDatabases()).Returns(new List<RDatabase>
            {
                new RDatabase
                {
                    Id=Guid.NewGuid(),
                    CatalogName="test",
                    DataSource=".",
                    Description="test",
                    IsTemplate=false,
                    Password=string.Empty,
                    Profile=string.Empty,
                    UserID=string.Empty,
                    RdbmsType="SqlServer",
                    ProviderName=string.Empty
                }
            });
            moAppHostBootstrap.Setup<List<IParameter>>(a => a.GetParameters()).Returns(new List<IParameter>
            {
                new Parameter{GroupCode = "EDICore",Code="ImplicitAllow",Value="ExplicitAllow"},
                new Parameter{GroupCode = "EDICore",Code="ACLLevel",Value="Level5OrganizationAction"},
                new Parameter{GroupCode = "EDICore",Code="ThisNodeID",Value="e16ef438-0f95-4605-8556-2ae6e10f1240"},
                new Parameter{GroupCode = "Framework",Code="TicksTimeout",Value="180"},
                new Parameter{GroupCode = "EDICore",Code="EntityLogonLevel",Value="Level5OrganizationAction"},
                new Parameter{GroupCode = "EDICore",Code="CenterNodeID",Value="e16ef438-0f95-4605-8556-2ae6e10f1240"},
                new Parameter{GroupCode = "EDICore",Code="BeatPeriod",Value="5"},
                new Parameter{GroupCode = "EDICore",Code="ImplicitEntityLogon",Value="ExplicitLogon"},
                new Parameter{GroupCode = "Framework",Code="EnableClientCache",Value="false"},
                new Parameter{GroupCode = "Framework",Code="SelfAppSystemCode",Value="AnyCmd"},
                new Parameter{GroupCode = "EDICore",Code="ImplicitAudit",Value="NotAudit"},
                new Parameter{GroupCode = "EDICore",Code="InfoFormat",Value="json"},
                new Parameter{GroupCode = "Framework",Code="SqlServerViewsSelect",Value="SELECT  [Project1].[Id] AS [Id] ,              [Project1].[CatalogName] AS [CatalogName] ,              [Project1].[SchemaName] AS [SchemaName] ,              [Project1].[Name] AS [Name] ,              [Project1].[Description] AS [Description]      FROM    ( SELECT    [Extent1].[Id] AS [Id] ,                          [Extent1].[CatalogName] AS [CatalogName] ,                          [Extent1].[SchemaName] AS [SchemaName] ,                          [Extent1].[Name] AS [Name] ,                          [Extent1].[Description] AS [Description]                FROM      ( SELECT    QUOTENAME(TABLE_SCHEMA)                                      + QUOTENAME(TABLE_NAME) [Id] ,                                      TABLE_CATALOG [CatalogName] ,                                      TABLE_SCHEMA [SchemaName] ,                                      TABLE_NAME [Name] ,                                      ( SELECT CAST(VALUE AS NVARCHAR(MAX))                                        FROM      ::                                                  FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                TABLE_SCHEMA,                                                                N'VIEW',                                                                TABLE_NAME,                                                                DEFAULT, DEFAULT)                                      ) AS [Description] ,                                      VIEW_DEFINITION [ViewDefinition] ,                                      CAST(CASE IS_UPDATABLE                                             WHEN 'YES' THEN 1                                             WHEN 'NO' THEN 0                                             ELSE 0                                           END AS BIT) [IsUpdatable]                            FROM      INFORMATION_SCHEMA.VIEWS                            WHERE     NOT ( TABLE_SCHEMA = 'dbo'                                            AND TABLE_NAME IN ( 'syssegments',                                                                'sysconstraints' )                                            AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                                          1, 1) = 8                                          )                          ) AS [Extent1]              ) AS [Project1]"},
                new Parameter{GroupCode = "EDICore",Code="EntityBackupPath",Value=@"D:\Projects\AnyCmd\db\Backup\"},
                new Parameter{GroupCode = "EDICore",Code="AuditLevel",Value="Level5OrganizationAction"},
                new Parameter{GroupCode = "EDICore",Code="ServiceIsAlive",Value="True"},
                new Parameter{GroupCode = "EDICore",Code="TraceIsEnabled",Value="false"},
                new Parameter{GroupCode = "Framework",Code="SqlServerViewColumnsSelect",Value="SELECT  [UnionAll1].[Id] AS [Id] ,              [UnionAll1].[Ordinal] AS [Ordinal] ,              [Extent1].[CatalogName] AS [CatalogName] ,              [Extent1].[SchemaName] AS [SchemaName] ,              [Extent1].[Name] AS [ViewName] ,              [UnionAll1].[Name] AS [Name] ,              [UnionAll1].[Description] AS [Description] ,              [UnionAll1].[IsNullable] AS [IsNullable] ,              [UnionAll1].[TypeName] AS [TypeName] ,              [UnionAll1].[MaxLength] AS [MaxLength] ,              [UnionAll1].[Precision] AS [Precision] ,              [UnionAll1].[DateTimePrecision] AS [DateTimePrecision] ,              [UnionAll1].[Scale] AS [Scale] ,              [UnionAll1].[IsIdentity] AS [IsIdentity] ,              [UnionAll1].[IsStoreGenerated] AS [IsStoreGenerated] ,              CASE WHEN ( [Project5].[C2] IS NULL ) THEN CAST(0 AS BIT)                   ELSE [Project5].[C2]              END AS [IsPrimaryKey]      FROM    ( SELECT    QUOTENAME(TABLE_SCHEMA) + QUOTENAME(TABLE_NAME) [Id] ,                          TABLE_CATALOG [CatalogName] ,                          TABLE_SCHEMA [SchemaName] ,                          TABLE_NAME [Name] ,                          VIEW_DEFINITION [ViewDefinition] ,                          CAST(CASE IS_UPDATABLE                                 WHEN 'YES' THEN 1                                 WHEN 'NO' THEN 0                                 ELSE 0                               END AS BIT) [IsUpdatable]                FROM      INFORMATION_SCHEMA.VIEWS                WHERE     NOT ( TABLE_SCHEMA = 'dbo'                                AND TABLE_NAME IN ( 'syssegments',                                                    'sysconstraints' )                                AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                              1, 1) = 8                              )              ) AS [Extent1]              INNER JOIN ( SELECT [Extent2].[Id] AS [Id] ,                                  [Extent2].[Name] AS [Name] ,                                  [Extent2].[Description] AS [Description] ,                                  [Extent2].[Ordinal] AS [Ordinal] ,                                  [Extent2].[IsNullable] AS [IsNullable] ,                                  [Extent2].[TypeName] AS [TypeName] ,                                  [Extent2].[MaxLength] AS [MaxLength] ,                                  [Extent2].[Precision] AS [Precision] ,                                  [Extent2].[DateTimePrecision] AS [DateTimePrecision] ,                                  [Extent2].[Scale] AS [Scale] ,                                  [Extent2].[IsIdentity] AS [IsIdentity] ,                                  [Extent2].[IsStoreGenerated] AS [IsStoreGenerated] ,                                  4 AS [C1] ,                                  [Extent2].[ParentId] AS [ParentId]                           FROM   ( SELECT    QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME)                                              + QUOTENAME(c.COLUMN_NAME) [Id] ,                                              QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                              c.COLUMN_NAME [Name] ,                                              ( SELECT CAST(VALUE AS NVARCHAR(MAX))                                                FROM      ::                                                          FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                c.TABLE_SCHEMA,                                                                N'VIEW',                                                                c.TABLE_NAME,                                                                N'COLUMN',                                                                c.COLUMN_NAME)                                              ) AS [Description] ,                                              c.ORDINAL_POSITION [Ordinal] ,                                              CAST(CASE c.IS_NULLABLE                                                     WHEN 'YES' THEN 1                                                     WHEN 'NO' THEN 0                                                     ELSE 0                                                   END AS BIT) [IsNullable] ,                                              CASE WHEN c.DATA_TYPE IN (                                                        'varchar', 'nvarchar',                                                        'varbinary' )                                                        AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                   THEN c.DATA_TYPE + '(max)'                                                   ELSE c.DATA_TYPE                                              END AS [TypeName] ,                                              c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                              CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                              CAST(c.DATETIME_PRECISION AS INTEGER) [DateTimePrecision] ,                                              CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                              c.COLLATION_CATALOG [CollationCatalog] ,                                              c.COLLATION_SCHEMA [CollationSchema] ,                                              c.COLLATION_NAME [CollationName] ,                                              c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                              c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                              c.CHARACTER_SET_NAME [CharacterSetName] ,                                              CAST(0 AS BIT) AS [IsMultiSet] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                              | CASE WHEN c.DATA_TYPE = 'timestamp'                                                     THEN 1                                                     ELSE 0                                                END AS BIT) AS [IsStoreGenerated] ,                                              c.COLUMN_DEFAULT AS [Default]                                    FROM      INFORMATION_SCHEMA.COLUMNS c                                              INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_CATALOG = t.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = t.TABLE_SCHEMA                                                                AND c.TABLE_NAME = t.TABLE_NAME                                                                AND t.TABLE_TYPE = 'BASE TABLE'                                  ) AS [Extent2]                           UNION ALL                           SELECT [Extent3].[Id] AS [Id] ,                                  [Extent3].[Name] AS [Name] ,                                  [Extent3].[Description] AS [Description] ,                                  [Extent3].[Ordinal] AS [Ordinal] ,                                  [Extent3].[IsNullable] AS [IsNullable] ,                                  [Extent3].[TypeName] AS [TypeName] ,                                  [Extent3].[MaxLength] AS [MaxLength] ,                                  [Extent3].[Precision] AS [Precision] ,                                  [Extent3].[DateTimePrecision] AS [DateTimePrecision] ,                                  [Extent3].[Scale] AS [Scale] ,                                  [Extent3].[IsIdentity] AS [IsIdentity] ,                                  [Extent3].[IsStoreGenerated] AS [IsStoreGenerated] ,                                  0 AS [C1] ,                                  [Extent3].[ParentId] AS [ParentId]                           FROM   ( SELECT    QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME)                                              + QUOTENAME(c.COLUMN_NAME) [Id] ,                                              QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                              c.COLUMN_NAME [Name] ,                                              ( SELECT CAST(VALUE AS NVARCHAR(MAX))                                                FROM      ::                                                          FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                c.TABLE_SCHEMA,                                                                N'VIEW',                                                                c.TABLE_NAME,                                                                N'COLUMN',                                                                c.COLUMN_NAME)                                              ) AS [Description] ,                                              c.ORDINAL_POSITION [Ordinal] ,                                              CAST(CASE c.IS_NULLABLE                                                     WHEN 'YES' THEN 1                                                     WHEN 'NO' THEN 0                                                     ELSE 0                                                   END AS BIT) [IsNullable] ,                                              CASE WHEN c.DATA_TYPE IN (                                                        'varchar', 'nvarchar',                                                        'varbinary' )                                                        AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                   THEN c.DATA_TYPE + '(max)'                                                   ELSE c.DATA_TYPE                                              END AS [TypeName] ,                                              c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                              CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                              CAST(c.DATETIME_PRECISION AS INTEGER) AS [DateTimePrecision] ,                                              CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                              c.COLLATION_CATALOG [CollationCatalog] ,                                              c.COLLATION_SCHEMA [CollationSchema] ,                                              c.COLLATION_NAME [CollationName] ,                                              c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                              c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                              c.CHARACTER_SET_NAME [CharacterSetName] ,                                              CAST(0 AS BIT) AS [IsMultiSet] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                              | CASE WHEN c.DATA_TYPE = 'timestamp'                                                     THEN 1                                                     ELSE 0                                                END AS BIT) AS [IsStoreGenerated] ,                                              c.COLUMN_DEFAULT [Default]                                    FROM      INFORMATION_SCHEMA.COLUMNS c                                              INNER JOIN INFORMATION_SCHEMA.VIEWS v ON c.TABLE_CATALOG = v.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = v.TABLE_SCHEMA                                                                AND c.TABLE_NAME = v.TABLE_NAME                                    WHERE     NOT ( v.TABLE_SCHEMA = 'dbo'                                                    AND v.TABLE_NAME IN (                                                    'syssegments',                                                    'sysconstraints' )                                                    AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                                                1, 1) = 8                                                  )                                  ) AS [Extent3]                         ) AS [UnionAll1] ON ( 0 = [UnionAll1].[C1] )                                             AND ( [Extent1].[Id] = [UnionAll1].[ParentId] )              LEFT OUTER JOIN ( SELECT    [UnionAll2].[Id] AS [C1] ,                                          CAST(1 AS BIT) AS [C2]                                FROM      ( SELECT    CAST(NULL AS NVARCHAR(1)) [Id] ,                                                      CAST(NULL AS NVARCHAR(256)) [ParentId] ,                                                      CAST(NULL AS NVARCHAR(256)) [Name] ,                                                      CAST(NULL AS NVARCHAR(256)) [ConstraintType] ,                                                      CAST(0 AS BIT) [IsDeferrable] ,                                                      CAST(0 AS BIT) [IsInitiallyDeferred] ,                                                      CAST(NULL AS NVARCHAR(MAX)) [Expression] ,                                                      CAST(NULL AS NVARCHAR(11)) [UpdateRule] ,                                                      CAST(NULL AS NVARCHAR(11)) [DeleteRule]                                            WHERE     1 = 2                                          ) AS [Extent4]                                          INNER JOIN ( SELECT 10 AS [C1] ,                                                              [Extent5].[ConstraintId] AS [ConstraintId] ,                                                              [Extent6].[Id] AS [Id]                                                       FROM   ( SELECT                                                                QUOTENAME(CONSTRAINT_SCHEMA)                                                                + QUOTENAME(CONSTRAINT_NAME) [ConstraintId] ,                                                                QUOTENAME(TABLE_SCHEMA)                                                                + QUOTENAME(TABLE_NAME)                                                                + QUOTENAME(COLUMN_NAME) [ColumnId]                                                                FROM                                                                INFORMATION_SCHEMA.KEY_COLUMN_USAGE                                                              ) AS [Extent5]                                                              INNER JOIN ( SELECT                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME)                                                                + QUOTENAME(c.COLUMN_NAME) [Id] ,                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                                                c.COLUMN_NAME [Name] ,                                                                c.ORDINAL_POSITION [Ordinal] ,                                                                CAST(CASE c.IS_NULLABLE                                                                WHEN 'YES'                                                                THEN 1                                                                WHEN 'NO' THEN 0                                                                ELSE 0                                                                END AS BIT) [IsNullable] ,                                                                CASE                                                                WHEN c.DATA_TYPE IN (                                                                'varchar',                                                                'nvarchar',                                                                'varbinary' )                                                                AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                                THEN c.DATA_TYPE                                                                + '(max)'                                                                ELSE c.DATA_TYPE                                                                END AS [TypeName] ,                                                                c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                                                CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                                                CAST(c.DATETIME_PRECISION AS INTEGER) [DateTimePrecision] ,                                                                CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                                                c.COLLATION_CATALOG [CollationCatalog] ,                                                                c.COLLATION_SCHEMA [CollationSchema] ,                                                                c.COLLATION_NAME [CollationName] ,                                                                c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                                                c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                                                c.CHARACTER_SET_NAME [CharacterSetName] ,                                                                CAST(0 AS BIT) AS [IsMultiSet] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                                                | CASE                                                                WHEN c.DATA_TYPE = 'timestamp'                                                                THEN 1                                                                ELSE 0                                                                END AS BIT) AS [IsStoreGenerated] ,                                                                c.COLUMN_DEFAULT AS [Default]                                                                FROM                                                                INFORMATION_SCHEMA.COLUMNS c                                                                INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_CATALOG = t.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = t.TABLE_SCHEMA                                                                AND c.TABLE_NAME = t.TABLE_NAME                                                                AND t.TABLE_TYPE = 'BASE TABLE'                                                                ) AS [Extent6] ON [Extent6].[Id] = [Extent5].[ColumnId]                                                       UNION ALL                                                       SELECT 7 AS [C1] ,                                                              [Extent7].[ConstraintId] AS [ConstraintId] ,                                                              [Extent8].[Id] AS [Id]                                                       FROM   ( SELECT                                                                CAST(NULL AS NVARCHAR(1)) [ConstraintId] ,                                                                CAST(NULL AS NVARCHAR(MAX)) [ColumnId]                                                                WHERE                                                                1 = 2                                                              ) AS [Extent7]                                                              INNER JOIN ( SELECT                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME)                                                                + QUOTENAME(c.COLUMN_NAME) [Id] ,                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                                                c.COLUMN_NAME [Name] ,                                                                c.ORDINAL_POSITION [Ordinal] ,                                                                CAST(CASE c.IS_NULLABLE                                                                WHEN 'YES'                                                                THEN 1                                                                WHEN 'NO' THEN 0                                                                ELSE 0                                                                END AS BIT) [IsNullable] ,                                                                CASE                                                                WHEN c.DATA_TYPE IN (                                                                'varchar',                                                                'nvarchar',                                                                'varbinary' )                                                                AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                                THEN c.DATA_TYPE                                                                + '(max)'                                                                ELSE c.DATA_TYPE                                                                END AS [TypeName] ,                                                                c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                                                CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                                                CAST(c.DATETIME_PRECISION AS INTEGER) AS [DateTimePrecision] ,                                                                CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                                                c.COLLATION_CATALOG [CollationCatalog] ,                                                                c.COLLATION_SCHEMA [CollationSchema] ,                                                                c.COLLATION_NAME [CollationName] ,                                                                c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                                                c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                                                c.CHARACTER_SET_NAME [CharacterSetName] ,                                                                CAST(0 AS BIT) AS [IsMultiSet] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                                                | CASE                                                                WHEN c.DATA_TYPE = 'timestamp'                                                                THEN 1                                                                ELSE 0                                                                END AS BIT) AS [IsStoreGenerated] ,                                                                c.COLUMN_DEFAULT [Default]                                                                FROM                                                                INFORMATION_SCHEMA.COLUMNS c                                                                INNER JOIN INFORMATION_SCHEMA.VIEWS v ON c.TABLE_CATALOG = v.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = v.TABLE_SCHEMA                                                                AND c.TABLE_NAME = v.TABLE_NAME                                                                WHERE                                                                NOT ( v.TABLE_SCHEMA = 'dbo'                                                                AND v.TABLE_NAME IN (                                                                'syssegments',                                                                'sysconstraints' )                                                                AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                                                1, 1) = 8                                                                )                                                                ) AS [Extent8] ON [Extent8].[Id] = [Extent7].[ColumnId]                                                     ) AS [UnionAll2] ON ( 7 = [UnionAll2].[C1] )                                                                AND ( [Extent4].[Id] = [UnionAll2].[ConstraintId] )                                WHERE     [Extent4].[ConstraintType] = N'PRIMARY KEY'                              ) AS [Project5] ON [UnionAll1].[Id] = [Project5].[C1]      WHERE   [Extent1].[Name] LIKE '%'"},
                new Parameter{GroupCode = "Framework",Code="SqlServerTablesSelect",Value="SELECT  [Project1].[Id] AS [Id] ,              [Project1].[CatalogName] AS [CatalogName] ,              [Project1].[SchemaName] AS [SchemaName] ,              [Project1].[Name] AS [Name] ,              [Project1].[Description] AS [Description]      FROM    ( SELECT    [Extent1].[Id] AS [Id] ,                          [Extent1].[CatalogName] AS [CatalogName] ,                          [Extent1].[SchemaName] AS [SchemaName] ,                          [Extent1].[Name] AS [Name] ,                          [Extent1].[Description] AS [Description]                FROM      ( SELECT    QUOTENAME(TABLE_SCHEMA)                                      + QUOTENAME(TABLE_NAME) [Id] ,                                      TABLE_CATALOG [CatalogName] ,                                      TABLE_SCHEMA [SchemaName] ,                                      TABLE_NAME [Name] ,                                      ( SELECT    CAST(VALUE AS NVARCHAR(MAX))                                        FROM      ::                                                  FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                TABLE_SCHEMA,                                                                N'TABLE',                                                                TABLE_NAME,                                                                DEFAULT, DEFAULT)                                      ) AS [Description]                            FROM      INFORMATION_SCHEMA.TABLES                            WHERE     TABLE_TYPE = 'BASE TABLE'                          ) AS [Extent1]              ) AS [Project1]"},
                new Parameter{GroupCode = "EDICore",Code="EntityArchivePath",Value=@"D:\Projects\AnyCmd\db\Archive\"},
                new Parameter{GroupCode = "Framework",Code="EnableOperationLog",Value="true"},
                new Parameter{GroupCode = "Framework",Code="SqlServerTableColumnsSelect",Value="SELECT  [UnionAll1].[Id] AS [Id] ,              [UnionAll1].[Ordinal] AS [Ordinal] ,              [Extent1].[CatalogName] AS [CatalogName] ,              [Extent1].[SchemaName] AS [SchemaName] ,              [Extent1].[Name] AS [TableName] ,              [UnionAll1].[Name] AS [Name] ,              [UnionAll1].[IsNullable] AS [IsNullable] ,              [UnionAll1].[TypeName] AS [TypeName] ,              [UnionAll1].[MaxLength] AS [MaxLength] ,              [UnionAll1].[Precision] AS [Precision] ,              [UnionAll1].[DateTimePrecision] AS [DateTimePrecision] ,              [UnionAll1].[Scale] AS [Scale] ,              [UnionAll1].[IsIdentity] AS [IsIdentity] ,              [UnionAll1].[IsStoreGenerated] AS [IsStoreGenerated] ,              [UnionAll1].[Default] AS DefaultValue ,              [UnionAll1].[Description] AS [Description] ,              CASE WHEN ( [Project5].[C2] IS NULL ) THEN CAST(0 AS BIT)                   ELSE [Project5].[C2]              END AS [IsPrimaryKey]      FROM    ( SELECT    QUOTENAME(TABLE_SCHEMA) + QUOTENAME(TABLE_NAME) [Id] ,                          TABLE_CATALOG [CatalogName] ,                          TABLE_SCHEMA [SchemaName] ,                          TABLE_NAME [Name]                FROM      INFORMATION_SCHEMA.TABLES                WHERE     TABLE_TYPE = 'BASE TABLE'              ) AS [Extent1]              INNER JOIN ( SELECT [Extent2].[Id] AS [Id] ,                                  [Extent2].[Name] AS [Name] ,                                  [Extent2].[Ordinal] AS [Ordinal] ,                                  [Extent2].[IsNullable] AS [IsNullable] ,                                  [Extent2].[TypeName] AS [TypeName] ,                                  [Extent2].[MaxLength] AS [MaxLength] ,                                  [Extent2].[Precision] AS [Precision] ,                                  [Extent2].[DateTimePrecision] AS [DateTimePrecision] ,                                  [Extent2].[Scale] AS [Scale] ,                                  [Extent2].[IsIdentity] AS [IsIdentity] ,                                  [Extent2].[IsStoreGenerated] AS [IsStoreGenerated] ,                                  [Extent2].[Default] ,                                  [Extent2].[Description] AS [Description] ,                                  0 AS [C1] ,                                  [Extent2].[ParentId] AS [ParentId]                           FROM   ( SELECT    QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME)                                              + QUOTENAME(c.COLUMN_NAME) [Id] ,                                              QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                              c.COLUMN_NAME [Name] ,                                              ( SELECT CAST(VALUE AS NVARCHAR(MAX))                                                FROM      ::                                                          FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                c.TABLE_SCHEMA,                                                                N'TABLE',                                                                c.TABLE_NAME,                                                                N'COLUMN',                                                                c.COLUMN_NAME)                                              ) AS [Description] ,                                              c.ORDINAL_POSITION [Ordinal] ,                                              CAST(CASE c.IS_NULLABLE                                                     WHEN 'YES' THEN 1                                                     WHEN 'NO' THEN 0                                                     ELSE 0                                                   END AS BIT) [IsNullable] ,                                              CASE WHEN c.DATA_TYPE IN (                                                        'varchar', 'nvarchar',                                                        'varbinary' )                                                        AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                   THEN c.DATA_TYPE + '(max)'                                                   ELSE c.DATA_TYPE                                              END AS [TypeName] ,                                              c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                              CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                              CAST(c.DATETIME_PRECISION AS INTEGER) [DateTimePrecision] ,                                              CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                              c.COLLATION_CATALOG [CollationCatalog] ,                                              c.COLLATION_SCHEMA [CollationSchema] ,                                              c.COLLATION_NAME [CollationName] ,                                              c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                              c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                              c.CHARACTER_SET_NAME [CharacterSetName] ,                                              CAST(0 AS BIT) AS [IsMultiSet] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                              | CASE WHEN c.DATA_TYPE = 'timestamp'                                                     THEN 1                                                     ELSE 0                                                END AS BIT) AS [IsStoreGenerated] ,                                              c.COLUMN_DEFAULT AS [Default]                                    FROM      INFORMATION_SCHEMA.COLUMNS c                                              INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_CATALOG = t.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = t.TABLE_SCHEMA                                                                AND c.TABLE_NAME = t.TABLE_NAME                                                                AND t.TABLE_TYPE = 'BASE TABLE'                                  ) AS [Extent2]                           UNION ALL                           SELECT [Extent3].[Id] AS [Id] ,                                  [Extent3].[Name] AS [Name] ,                                  [Extent3].[Ordinal] AS [Ordinal] ,                                  [Extent3].[IsNullable] AS [IsNullable] ,                                  [Extent3].[TypeName] AS [TypeName] ,                                  [Extent3].[MaxLength] AS [MaxLength] ,                                  [Extent3].[Precision] AS [Precision] ,                                  [Extent3].[DateTimePrecision] AS [DateTimePrecision] ,                                  [Extent3].[Scale] AS [Scale] ,                                  [Extent3].[IsIdentity] AS [IsIdentity] ,                                  [Extent3].[IsStoreGenerated] AS [IsStoreGenerated] ,                                  [Extent3].[Default] ,                                  [Extent3].[Description] AS [Description] ,                                  6 AS [C1] ,                                  [Extent3].[ParentId] AS [ParentId]                           FROM   ( SELECT    QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME)                                              + QUOTENAME(c.COLUMN_NAME) [Id] ,                                              QUOTENAME(c.TABLE_SCHEMA)                                              + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                              c.COLUMN_NAME [Name] ,                                              ( SELECT CAST(VALUE AS NVARCHAR(MAX))                                                FROM      ::                                                          FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                c.TABLE_SCHEMA,                                                                N'TABLE',                                                                c.TABLE_NAME,                                                                N'COLUMN',                                                                c.COLUMN_NAME)                                              ) AS [Description] ,                                              c.ORDINAL_POSITION [Ordinal] ,                                              CAST(CASE c.IS_NULLABLE                                                     WHEN 'YES' THEN 1                                                     WHEN 'NO' THEN 0                                                     ELSE 0                                                   END AS BIT) [IsNullable] ,                                              CASE WHEN c.DATA_TYPE IN (                                                        'varchar', 'nvarchar',                                                        'varbinary' )                                                        AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                   THEN c.DATA_TYPE + '(max)'                                                   ELSE c.DATA_TYPE                                              END AS [TypeName] ,                                              c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                              CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                              CAST(c.DATETIME_PRECISION AS INTEGER) AS [DateTimePrecision] ,                                              CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                              c.COLLATION_CATALOG [CollationCatalog] ,                                              c.COLLATION_SCHEMA [CollationSchema] ,                                              c.COLLATION_NAME [CollationName] ,                                              c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                              c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                              c.CHARACTER_SET_NAME [CharacterSetName] ,                                              CAST(0 AS BIT) AS [IsMultiSet] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                              CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                              | CASE WHEN c.DATA_TYPE = 'timestamp'                                                     THEN 1                                                     ELSE 0                                                END AS BIT) AS [IsStoreGenerated] ,                                              c.COLUMN_DEFAULT [Default]                                    FROM      INFORMATION_SCHEMA.COLUMNS c                                              INNER JOIN INFORMATION_SCHEMA.VIEWS v ON c.TABLE_CATALOG = v.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = v.TABLE_SCHEMA                                                                AND c.TABLE_NAME = v.TABLE_NAME                                    WHERE     NOT ( v.TABLE_SCHEMA = 'dbo'                                                    AND v.TABLE_NAME IN (                                                    'syssegments',                                                    'sysconstraints' )                                                    AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                                                1, 1) = 8                                                  )                                  ) AS [Extent3]                         ) AS [UnionAll1] ON ( 0 = [UnionAll1].[C1] )                                             AND ( [Extent1].[Id] = [UnionAll1].[ParentId] )              LEFT OUTER JOIN ( SELECT    [UnionAll2].[Id] AS [C1] ,                                          CAST(1 AS BIT) AS [C2]                                FROM      ( SELECT    QUOTENAME(tc.CONSTRAINT_SCHEMA)                                                      + QUOTENAME(tc.CONSTRAINT_NAME) [Id] ,                                                      QUOTENAME(tc.TABLE_SCHEMA)                                                      + QUOTENAME(tc.TABLE_NAME) [ParentId] ,                                                      tc.CONSTRAINT_NAME [Name] ,                                                      tc.CONSTRAINT_TYPE [ConstraintType] ,                                                      CAST(CASE tc.IS_DEFERRABLE                                                             WHEN 'NO' THEN 0                                                             ELSE 1                                                           END AS BIT) [IsDeferrable] ,                                                      CAST(CASE tc.INITIALLY_DEFERRED                                                             WHEN 'NO' THEN 0                                                             ELSE 1                                                           END AS BIT) [IsInitiallyDeferred]                                            FROM      INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc                                            WHERE     tc.TABLE_NAME IS NOT NULL                                          ) AS [Extent4]                                          INNER JOIN ( SELECT 7 AS [C1] ,                                                              [Extent5].[ConstraintId] AS [ConstraintId] ,                                                              [Extent6].[Id] AS [Id]                                                       FROM   ( SELECT                                                                QUOTENAME(CONSTRAINT_SCHEMA)                                                                + QUOTENAME(CONSTRAINT_NAME) [ConstraintId] ,                                                                QUOTENAME(TABLE_SCHEMA)                                                                + QUOTENAME(TABLE_NAME)                                                                + QUOTENAME(COLUMN_NAME) [ColumnId]                                                                FROM                                                                INFORMATION_SCHEMA.KEY_COLUMN_USAGE                                                              ) AS [Extent5]                                                              INNER JOIN ( SELECT                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME)                                                                + QUOTENAME(c.COLUMN_NAME) [Id] ,                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                                                c.COLUMN_NAME [Name] ,                                                                c.ORDINAL_POSITION [Ordinal] ,                                                                CAST(CASE c.IS_NULLABLE                                                                WHEN 'YES'                                                                THEN 1                                                                WHEN 'NO' THEN 0                                                                ELSE 0                                                                END AS BIT) [IsNullable] ,                                                                CASE                                                                WHEN c.DATA_TYPE IN (                                                                'varchar',                                                                'nvarchar',                                                                'varbinary' )                                                                AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                                THEN c.DATA_TYPE                                                                + '(max)'                                                                ELSE c.DATA_TYPE                                                                END AS [TypeName] ,                                                                c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                                                CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                                                CAST(c.DATETIME_PRECISION AS INTEGER) [DateTimePrecision] ,                                                                CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                                                c.COLLATION_CATALOG [CollationCatalog] ,                                                                c.COLLATION_SCHEMA [CollationSchema] ,                                                                c.COLLATION_NAME [CollationName] ,                                                                c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                                                c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                                                c.CHARACTER_SET_NAME [CharacterSetName] ,                                                                CAST(0 AS BIT) AS [IsMultiSet] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                                                | CASE                                                                WHEN c.DATA_TYPE = 'timestamp'                                                                THEN 1                                                                ELSE 0                                                                END AS BIT) AS [IsStoreGenerated] ,                                                                c.COLUMN_DEFAULT AS [Default]                                                                FROM                                                                INFORMATION_SCHEMA.COLUMNS c                                                                INNER JOIN INFORMATION_SCHEMA.TABLES t ON c.TABLE_CATALOG = t.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = t.TABLE_SCHEMA                                                                AND c.TABLE_NAME = t.TABLE_NAME                                                                AND t.TABLE_TYPE = 'BASE TABLE'                                                                ) AS [Extent6] ON [Extent6].[Id] = [Extent5].[ColumnId]                                                       UNION ALL                                                       SELECT 11 AS [C1] ,                                                              [Extent7].[ConstraintId] AS [ConstraintId] ,                                                              [Extent8].[Id] AS [Id]                                                       FROM   ( SELECT                                                                CAST(NULL AS NVARCHAR(1)) [ConstraintId] ,                                                                CAST(NULL AS NVARCHAR(MAX)) [ColumnId]                                                                WHERE                                                                1 = 2                                                              ) AS [Extent7]                                                              INNER JOIN ( SELECT                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME)                                                                + QUOTENAME(c.COLUMN_NAME) [Id] ,                                                                QUOTENAME(c.TABLE_SCHEMA)                                                                + QUOTENAME(c.TABLE_NAME) [ParentId] ,                                                                c.COLUMN_NAME [Name] ,                                                                ( SELECT TOP 1                                                                VALUE                                                                FROM                                                                ::                                                                FN_LISTEXTENDEDPROPERTY(N'MS_Description',                                                                N'SCHEMA',                                                                c.TABLE_SCHEMA,                                                                N'TABLE',                                                                c.TABLE_NAME,                                                                N'COLUMN',                                                                c.COLUMN_NAME)                                                                ) AS [Description] ,                                                                c.ORDINAL_POSITION [Ordinal] ,                                                                CAST(CASE c.IS_NULLABLE                                                                WHEN 'YES'                                                                THEN 1                                                                WHEN 'NO' THEN 0                                                                ELSE 0                                                                END AS BIT) [IsNullable] ,                                                                CASE                                                                WHEN c.DATA_TYPE IN (                                                                'varchar',                                                                'nvarchar',                                                                'varbinary' )                                                                AND c.CHARACTER_MAXIMUM_LENGTH = -1                                                                THEN c.DATA_TYPE                                                                + '(max)'                                                                ELSE c.DATA_TYPE                                                                END AS [TypeName] ,                                                                c.CHARACTER_MAXIMUM_LENGTH [MaxLength] ,                                                                CAST(c.NUMERIC_PRECISION AS INTEGER) [Precision] ,                                                                CAST(c.DATETIME_PRECISION AS INTEGER) AS [DateTimePrecision] ,                                                                CAST(c.NUMERIC_SCALE AS INTEGER) [Scale] ,                                                                c.COLLATION_CATALOG [CollationCatalog] ,                                                                c.COLLATION_SCHEMA [CollationSchema] ,                                                                c.COLLATION_NAME [CollationName] ,                                                                c.CHARACTER_SET_CATALOG [CharacterSetCatalog] ,                                                                c.CHARACTER_SET_SCHEMA [CharacterSetSchema] ,                                                                c.CHARACTER_SET_NAME [CharacterSetName] ,                                                                CAST(0 AS BIT) AS [IsMultiSet] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsIdentity') AS BIT) AS [IsIdentity] ,                                                                CAST(COLUMNPROPERTY(OBJECT_ID(QUOTENAME(c.TABLE_SCHEMA)                                                                + '.'                                                                + QUOTENAME(c.TABLE_NAME)),                                                                c.COLUMN_NAME,                                                                'IsComputed')                                                                | CASE                                                                WHEN c.DATA_TYPE = 'timestamp'                                                                THEN 1                                                                ELSE 0                                                                END AS BIT) AS [IsStoreGenerated] ,                                                                c.COLUMN_DEFAULT [Default]                                                                FROM                                                                INFORMATION_SCHEMA.COLUMNS c                                                                INNER JOIN INFORMATION_SCHEMA.VIEWS v ON c.TABLE_CATALOG = v.TABLE_CATALOG                                                                AND c.TABLE_SCHEMA = v.TABLE_SCHEMA                                                                AND c.TABLE_NAME = v.TABLE_NAME                                                                WHERE                                                                NOT ( v.TABLE_SCHEMA = 'dbo'                                                                AND v.TABLE_NAME IN (                                                                'syssegments',                                                                'sysconstraints' )                                                                AND SUBSTRING(CAST(SERVERPROPERTY('productversion') AS VARCHAR(20)),                                                                1, 1) = 8                                                                )                                                                ) AS [Extent8] ON [Extent8].[Id] = [Extent7].[ColumnId]                                                     ) AS [UnionAll2] ON ( 7 = [UnionAll2].[C1] )                                                                AND ( [Extent4].[Id] = [UnionAll2].[ConstraintId] )                                WHERE     [Extent4].[ConstraintType] = N'PRIMARY KEY'                              ) AS [Project5] ON [UnionAll1].[Id] = [Project5].[C1]      WHERE   [Extent1].[Name] LIKE '%'"}
            });
            moAppHostBootstrap.Setup<IList<DbTableColumn>>(a => a.GetTableColumns(It.IsAny<RdbDescriptor>())).Returns(new List<DbTableColumn>());
            moAppHostBootstrap.Setup<IList<DbTable>>(a => a.GetDbTables(It.IsAny<RdbDescriptor>())).Returns(new List<DbTable>());
            moAppHostBootstrap.Setup<IList<DbViewColumn>>(a => a.GetViewColumns(It.IsAny<RdbDescriptor>())).Returns(new List<DbViewColumn>());
            moAppHostBootstrap.Setup<IList<DbView>>(a => a.GetDbViews(It.IsAny<RdbDescriptor>())).Returns(new List<DbView>());
            moAppHostBootstrap.Setup<IList<Organization>>(a => a.GetOrganizations()).Returns(host.GetRequiredService<IRepository<Organization>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<AppSystem>>(a => a.GetAllAppSystems()).Returns(host.GetRequiredService<IRepository<AppSystem>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Button>>(a => a.GetAllButtons()).Returns(host.GetRequiredService<IRepository<Button>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Dic>>(a => a.GetAllDics()).Returns(host.GetRequiredService<IRepository<Dic>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<DicItem>>(a => a.GetAllDicItems()).Returns(host.GetRequiredService<IRepository<DicItem>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<EntityType>>(a => a.GetAllEntityTypes()).Returns(host.GetRequiredService<IRepository<EntityType>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Property>>(a => a.GetAllProperties()).Returns(host.GetRequiredService<IRepository<Property>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Function>>(a => a.GetAllFunctions()).Returns(host.GetRequiredService<IRepository<Function>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Group>>(a => a.GetAllGroups()).Returns(host.GetRequiredService<IRepository<Group>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Menu>>(a => a.GetAllMenus()).Returns(host.GetRequiredService<IRepository<Menu>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Page>>(a => a.GetAllPages()).Returns(host.GetRequiredService<IRepository<Page>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<PageButton>>(a => a.GetAllPageButtons()).Returns(host.GetRequiredService<IRepository<PageButton>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<PrivilegeBigram>>(a => a.GetPrivilegeBigrams()).Returns(host.GetRequiredService<IRepository<PrivilegeBigram>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<ResourceType>>(a => a.GetAllResources()).Returns(host.GetRequiredService<IRepository<ResourceType>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Role>>(a => a.GetAllRoles()).Returns(host.GetRequiredService<IRepository<Role>>().FindAll().ToList());
            moAppHostBootstrap.Setup<IList<Account>>(a => a.GetAllDevAccounts()).Returns(host.GetRequiredService<IRepository<Account>>().FindAll().ToList());
            host.AddService(typeof(IAppHostBootstrap), moAppHostBootstrap.Object);
            host.Init();

            return host;
        }

        public static Mock<TRepository> GetMoqRepository<TEntity, TRepository>(this AppHost host)
            where TEntity : class, IAggregateRoot
            where TRepository : class, IRepository<TEntity>
        {

            var moRepository = new Mock<TRepository>();
            var context = new MoqRepositoryContext(host);
            moRepository.Setup<IRepositoryContext>(a => a.Context).Returns(context);
            moRepository.Setup(a => a.Add(It.IsAny<TEntity>()));
            moRepository.Setup(a => a.Remove(It.IsAny<TEntity>()));
            moRepository.Setup(a => a.Update(It.IsAny<TEntity>()));
            moRepository.Setup<TEntity>(a => a.GetByKey(It.IsAny<Guid>())).Returns((TEntity)null);
            moRepository.Setup<IQueryable<TEntity>>(a => a.FindAll()).Returns(new List<TEntity>().AsQueryable());

            return moRepository;
        }
        #region Parameter
        private class Parameter : IParameter
        {
            public string GroupCode { get; set; }

            public string Code { get; set; }

            public string Value { get; set; }
        }
        #endregion

        public static void RegisterRepository(this AppHost host, params Assembly[] assemblies)
        {
            foreach (var assembly in assemblies)
            {
                foreach (var type in assembly.GetTypes())
                {
                    if (type.IsClass && !type.IsAbstract && typeof(IAggregateRoot).IsAssignableFrom(type))
                    {
                        var repositoryType = typeof(MoqCommonRepository<>);
                        var genericInterface = typeof(IRepository<>);
                        repositoryType = repositoryType.MakeGenericType(type);
                        genericInterface = genericInterface.MakeGenericType(type);
                        var repository = Activator.CreateInstance(repositoryType, host);
                        host.AddService(genericInterface, repository);
                    }
                }
            }
        }
    }
}
